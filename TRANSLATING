AUR Translation
================

This document describes how to create and maintain AUR translations.
It was derived from http://wiki.archlinux.org/index.php/AUR_Translation

Creating an AUR translation requires python and git to be installed.

Translation files should be gzipped to protect from possible encoding
errors when submitting.

Patches should be sent to the aur-dev mailing list at:
aur-dev@archlinux.org


Creating a New Translation
---------------------------

Before beginning, please make sure that git and python are installed.
Also, please do not translate if you are unwilling to maintain or find
someone to maintain the translation. This is due to the fact that the
AUR is a rapidly evolving project and there are constantly new strings
to be translated. If the translations get too out of sync with the
released versions, there will be too many untranslated strings for the
translation to be usable, and it may have to be disabled.

1. Check out the AUR source using git.

$ git clone git://projects.archlinux.org/aur.git aur-git

2. Go into the AUR source and run translation_tool.
   translation_tool will interactively guide you through the translation
   process, simply answer its questions and prompts. If you wish to stop
   at some point during the translation, you may kill translation_tool
   using Ctrl+C. If you later wish to continue the translation, simply
   run translation_tool again, and it will continue from where you left off.

$ cd aur-git
$ git checkout master
$ git pull
$ cd web/lang
$ ./translation_tool

3. Add a line for the new translation in web/lib/config.inc.proto
4. Add an entry in the AUTHORS file.

5. To commit your patch to your branch:

$ git add <all edited files>
$ git commit -s

Write your commit message above the sign off and separate them by a
blank line.

6. Create a git formatted patch.

$ git format-patch origin/master

7. Send the gzipped patch to the aur-dev mailing list.


Updating an Existing Translation
---------------------------------

1. Update your copy of the AUR code.

$ cd aur-git
$ git pull

2. Run translation_tool, which will only prompts for strings that have
   changed or been added since the last translation.

$ cd web/lang
$ ./translation_tool

3. To commit your patch to your branch:

$ git add <all edited files>
$ git commit -s

4. Create a git formatted patch.

$ git format-patch origin/master

5. Send the gzipped patch to the aur-dev mailing list.

